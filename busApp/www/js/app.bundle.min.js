angular.module("busApp",["ionic","ngCordova","ionic-modal-select","busApp.controllers"]).run(function($ionicPlatform,$rootScope){$ionicPlatform.ready(function(){if(window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard){cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);cordova.plugins.Keyboard.disableScroll(true)}if(window.StatusBar)StatusBar.styleDefault()})}).config(function($ionicConfigProvider,$stateProvider,$urlRouterProvider,$animateProvider){$animateProvider.classNameFilter(/\bangular-animated\b/);
$ionicConfigProvider.scrolling.jsScrolling(true);$stateProvider.state("tab",{url:"/main","abstract":true,templateUrl:"templates/tabs.html",controller:"TabsCtrl as vm"}).state("tab.home",{url:"/home",views:{"tab-home":{templateUrl:"templates/tab-home.html",controller:"HomeCtrl as vm"}}}).state("tab.search",{url:"/search",views:{"tab-search":{templateUrl:"templates/tab-search.html",controller:"SearchCtrl as vm"}}}).state("tab.search.line-detail",{url:"/:lineCode",views:{"tab-search@tab":{templateUrl:"templates/line-detail.html",
controller:"LineDetailCtrl as vm"}}}).state("tab.update",{url:"/update",views:{"tab-update":{templateUrl:"templates/tab-update.html",controller:"UpdateCtrl as vm"}}});$urlRouterProvider.otherwise("/main/home")});
(function(){function error(err){var msg="Ocorreu um erro desconhecido. Por favor, tente denovo...";console.error(angular.toJson(err));alert(angular.toJson(err))}angular.module("busApp.controllers",[]).controller("TabsCtrl",function($scope,$q,$rootScope,$ionicLoading,$cordovaNetwork,Model){$scope.lines=[];$scope.exits=[];function getData(create){var promises=[];$ionicLoading.show({template:"<p>Carregando...</p><ion-spinner></ion-spinner>"});if(create)promises.push(Model.Lines.createTables());promises.push(Model.Lines.getAll().then(function(resp){$scope.lines=
resp}));promises.push(Model.Lines.getExits().then(function(resp){$scope.exits=resp}));$q.all(promises).then(function(resp){$ionicLoading.hide()},function(err){error(err);$ionicLoading.hide()})}ionic.Platform.ready(function(){getData()});$scope.$on("update-lines",function(event,data){getData()})}).controller("HomeCtrl",function($scope,$ionicLoading,$interval,$timeout,$state,Model){var vm=this;vm.nextSchedules=[];vm.intervalId=null;vm.exitModel="TICEN - PLATAFORMA E";$scope.$on("$ionicView.enter",function(e){vm.intervalId=
$interval(function(){vm.updateNextSchedules()},2E3)});$scope.$on("$ionicView.leave",function(e){$interval.cancel(vm.intervalId)});vm.onSelect=function(newValue,oldValue){vm.updateNextSchedules()};vm.gotoLine=function(cod){$state.go("tab.search");$timeout(function(){$state.go("tab.search.line-detail",{lineCode:cod})},0)};vm.updateNextSchedules=function(){var cDate=new Date;var cHour=cDate.timeNow();var cDay=cDate.getDay();vm.nextSchedules=[];for(var a=0;a<$scope.lines.length;a++){var line=$scope.lines[a];
var nome=line.nome;for(var b=0;b<line.schedules.length;b++){var schedules=line.schedules[b];var exit=schedules.exit;if(exit!=vm.exitModel)continue;for(var c=0;c<schedules.weekdays.length;c++){var weekdays=schedules.weekdays[c];var day=weekdays.day;if(!vm.isToday(cDay,day))continue;var count=0;for(var d=0;d<weekdays.schedule.length;d++){var hora=weekdays.schedule[d];if(cHour<hora){vm.nextSchedules.push({cod:line.cod,nome:nome,obs:line.obs,hora:hora});count++}if(count>=3)break}}}}};Date.prototype.timeNow=
function(){var d={h:this.getHours(),m:this.getMinutes()};return(d.h<10?"0":"")+d.h+":"+(d.m<10?"0":"")+d.m};vm.isToday=function(cDay,day){if(cDay==0&&day=="Domingo")return true;else if(cDay==6&&(day=="Sabados"||day=="S\u00e1bados"||day=="Sabado"||day=="S\u00e1bado"))return true;else return day=="Semana"&&(cDay>0&&cDay<6)}}).controller("SearchCtrl",function($scope){var vm=this;vm.filter=""}).controller("LineDetailCtrl",function($scope,$stateParams,filterFilter,Model){var vm=this;vm.line={};vm.currentExit=
0;vm.arrowRight=true;vm.currentTab=[];vm.arrowClick=function(){++vm.currentExit;if(vm.currentExit>=vm.line.schedules.length){vm.currentExit=0;vm.arrowRight=true}else if(vm.currentExit+1>=vm.line.schedules.length)vm.arrowRight=false;vm.updateData()};vm.tabClick=function(sch_idx,tab_name){vm.currentTab[sch_idx]=tab_name};vm.updateData=function(){vm.line=filterFilter($scope.lines,{cod:parseInt($stateParams.lineCode)})[0];if(vm.line&&vm.line.schedules){vm.sch=vm.line.schedules[vm.currentExit];if(!vm.currentTab[vm.currentExit])vm.currentTab[vm.currentExit]=
vm.sch.weekdays[0].day}};$scope.$watch("lines",function(newValue,oldValue){vm.updateData()});vm.updateData()}).controller("UpdateCtrl",function($scope,$ionicLoading,$ionicActionSheet,ConnectivityMonitor,Model,Extractor){var vm=this;function _update(){$ionicLoading.show({template:"<p>Atualizando...</p><ion-spinner></ion-spinner>"});Extractor.getData($scope.lines).then(function(data){data=data.filter(function(obj){return obj!==null});$ionicLoading.hide();alert(data.length+" linha(s) atualizada(s).");
$scope.$emit("update-lines","done!")},function(err){error(err);$ionicLoading.hide()})}vm.update=function(){if(ConnectivityMonitor.isOffline()){alert("Voc\ufffd est\ufffd offline.");return}var connType=ConnectivityMonitor.getNetwork();console.log("Connection: "+connType);if(connType!="wifi"&&connType!="ethernet")var hideSheet=$ionicActionSheet.show({titleText:"<strong>Recomendamos a utiliza\ufffd\ufffdo de wi-fi para esta opera\ufffd\ufffdo.<br>Deseja continuar mesmo assim?</strong>",cancelText:"Cancelar",
destructiveText:'<i class="icon ion-checkmark-round balanced"></i> Continuar',cancel:function(){},destructiveButtonClicked:function(){_update();hideSheet()}});else _update()}})})();
(function(){angular.module("busApp").service("SqliteService",function($q,$cordovaSQLite){var self=this;var _db;var _querys=[];self.db=function(){if(!_db)if(window.sqlitePlugin!==undefined){console.log("Loading cellphone's DB");_db=window.sqlitePlugin.openDatabase({name:"database.db",location:2,createFromLocation:1})}else{console.log("Loading browser's DB");_db=window.openDatabase("database.db","1.0","Database",2E5)}return _db};self.executeSql=function(query,parameters){parameters=parameters==undefined?
[]:parameters;return $cordovaSQLite.execute(self.db(),query,parameters)};self.getItems=function(query,parameters){return self.executeSql(query,parameters).then(function(resp){var _items=[];for(var i=0;i<resp.rows.length;i++)_items.push(resp.rows.item(i));return _items})};self.addQuery=function(query,parameters){_querys.push({"query":query,"params":parameters})};self.executePendingQueries=function(){var promises=[];var resps=[];_querys.map(function(value){promises.push(self.executeSql(value.query,
value.params).then(function(resp){return resp}))});console.log("Running "+promises.length+" queries!");return $q.all(promises).then(function(resp){_querys=[];return resp})}})})();
(function(){angular.module("busApp").factory("ConnectivityMonitor",function($rootScope,$cordovaNetwork){return{isOnline:isOnline,isOffline:isOffline,getNetwork:getNetwork};function isOnline(){if(ionic.Platform.isWebView())return $cordovaNetwork.isOnline();else return navigator.onLine}function isOffline(){if(ionic.Platform.isWebView())return!$cordovaNetwork.isOnline();else return!navigator.onLine}function getNetwork(){if(ionic.Platform.isWebView())return $cordovaNetwork.getNetwork();else return"unknown"}
})})();
(function(){function getRoutes($http,SqliteService){var url="http://www.biguacutransportes.com.br/ajax/lineBus/searchGetLine";var data="company=1&order=DESC";function parseData(resp){var _resp=[];angular.element(resp).find("tr").each(function(i,val){var tr=$(val);var tds=tr.find("td");if($(tds[1]).text()!=""){var cod=parseInt($(tds[0]).text());var nome=$(tds[1]).text().trim();var obs=$(tds[3]).text().trim();_resp.push({cod:cod,nome:nome,obs:obs})}});return _resp}$http.defaults.headers.post["Content-Type"]=
"application/x-www-form-urlencoded";return $http({method:"POST",url:url,data:data}).then(function(response){return parseData(response.data)})}function getRoute($http,SqliteService,cod){var url="http://www.biguacutransportes.com.br/ajax/lineBus/preview/?line="+cod+"&company=0&detail%5B%5D=1&detail%5B%5D=2&detail%5B%5D=3";function parseData(resp){var _result=[];resp=resp.replace(/src=.+?>/g,">");_result.lastUpdate=$(resp).find("#contentInfo > div:nth-child(2)").text().slice(19).trim();
var tmp=_result.lastUpdate.split("/");_result.lastUpdate=new Date(parseInt(tmp[2]),parseInt(tmp[1])-1,parseInt(tmp[0]));_result.lastUpdate=_result.lastUpdate.toDateString();_result.data=[];$(resp).find("#tabContent1 > div").each(function(a,val){val=$(val);var obj={};obj.exit=$(val.children("div:first")).find("> div > strong").text().trim();obj.weekdays=[];$(val.children("div:last")).find("> ul > li").each(function(b,val2){val2=$(val2);var day=val2.find("> div:first > strong").text().trim();if(day.indexOf("Segunda")>
-1)day="Semana";else if(day.indexOf("feriados")>-1)day="Domingo";obj.weekdays[b]={"day":day};obj.weekdays[b].schedule=[];val2.find("> div:eq(1) > ul > li").each(function(c,val3){val3=$(val3);var horario=val3.find("> div:first > a").text().trim();if(horario!=""){if(horario.indexOf("24:")>-1)horario=horario.replace(/24:/,"00:");obj.weekdays[b].schedule.push(horario)}})});_result.data.push(obj)});return _result}return $http.get(url,{headers:{}}).then(function(response){return parseData(response.data)})}
angular.module("busApp").service("Extractor",function($http,$q,SqliteService,filterFilter){return{getData:getData};function getData(lastLines){var query1="DELETE FROM horario WHERE linha_cod = ?";var query2="DELETE FROM linha WHERE cod = ?";var query3="INSERT INTO linha (cod, nome, obs, last_update) VALUES (?,?,?,?);";var query4="INSERT INTO horario (hora,saida,dia,linha_cod) VALUES (?,?,?,?);";var r=getRoutes($http,SqliteService).then(function(resp){var promises=[];resp.map(function(value){promises.push(getRoute($http,
SqliteService,value.cod).then(function(resp2){value.lastUpdate=resp2.lastUpdate;value.schedules=resp2.data;if(lastLines&&lastLines.length>0){var cValue=filterFilter(lastLines,{cod:parseInt(value.cod)})[0];if(cValue&&value.lastUpdate==cValue.last_update)return null}SqliteService.addQuery(query1,[value.cod]);SqliteService.addQuery(query2,[value.cod]);SqliteService.addQuery(query3,[value.cod,value.nome,value.obs,value.lastUpdate]);for(var a=0;a<resp2.data.length;a++){var schedules=resp2.data[a];var exit=
schedules.exit;for(var b=0;b<schedules.weekdays.length;b++){var weekdays=schedules.weekdays[b];var day=weekdays.day;for(var c=0;c<weekdays.schedule.length;c++){var hora=weekdays.schedule[c];SqliteService.addQuery(query4,[hora,exit,day,value.cod])}}}return value}))});return $q.all(promises).then(function(resp3){console.log("Extractor: Extraction completed!");return SqliteService.executePendingQueries().then(function(resp){console.log("Extractor: Update BD complete!");return resp3})})});return r}})})();
(function(){angular.module("busApp").factory("Lines",function($q,$rootScope,filterFilter,SqliteService){return{getAll:getAll,getExits:getExits,createTables:createTables};function createTables(){var querys=["DROP TABLE horario;","DROP TABLE linha;","CREATE TABLE IF NOT EXISTS linha (cod INTEGER PRIMARY KEY,"+"nome TEXT NOT NULL, obs TEXT, last_update TEXT);","CREATE TABLE IF NOT EXISTS horario (id INTEGER PRIMARY KEY AUTOINCREMENT,"+"hora CHAR(5), saida TEXT, dia TEXT, linha_cod INTEGER,"+"FOREIGN KEY(linha_cod) REFERENCES linha(cod));"];
for(var i=0;i<querys.length;i++)SqliteService.addQuery(querys[i]);return SqliteService.executePendingQueries()}function parseData(resp){var _resp=[];var lastExit="",lastDay="",lastIndex=0;for(var i=0;i<resp.rows.length;i++){var val=resp.rows.item(i);if(lastExit==""||lastExit!=val.saida){lastExit=val.saida;lastDay="";_resp.push({exit:lastExit,weekdays:[]})}if(lastDay==""||lastDay!=val.dia){lastDay=val.dia;lastIndex=lastDay=="Semana"?0:lastDay=="Domingo"?2:1;_resp[_resp.length-1].weekdays[lastIndex]=
{day:lastDay,schedule:[]}}var lastSchedule=_resp[_resp.length-1].weekdays[lastIndex];lastSchedule.schedule.push(val.hora)}return _resp}function getAll(){var _routes=[];var query1="SELECT * FROM linha ORDER BY nome ASC";var query2="SELECT * FROM horario WHERE linha_cod = ? ORDER BY saida,dia DESC";var p=SqliteService.executeSql(query1).then(function(resp){var promises=[];for(var i=0;i<resp.rows.length;i++){_routes.push(resp.rows.item(i));_routes[i].schedules=[];promises.push(SqliteService.executeSql(query2,
[parseInt(_routes[i].cod)]).then(function(resp2){return parseData(resp2)}))}return $q.all(promises).then(function(resp3){angular.forEach(_routes,function(val,a){_routes[a].schedules=resp3[a]});return _routes})});return p}function getExits(){var query="SELECT saida FROM horario GROUP BY saida";return SqliteService.getItems(query).then(function(resp){var _resp=[];for(var i=0;i<resp.length;i++)_resp.push(resp[i].saida);return _resp})}})})();(function(){angular.module("busApp").factory("Model",function(Lines){return{Lines:Lines}})})();
